# Журнал изменений проекта "Смета за 5 минут"

## Обзор проекта

Это веб-приложение для создания и управления сметами, предназначенное для использования в качестве Telegram Web App. Оно позволяет пользователям управлять проектами, создавать подробные сметы, отслеживать финансы и многое другое.

### Ключевые возможности:

- **Управление проектами**: Создание проектов с информацией о клиенте и адресе.
- **Создание смет**: Составление смет с позициями (работы/материалы), количеством, ценами, скидками и налогами.
- **Финансовый учет**: Регистрация расходов и оплат по каждому проекту.
- **Отчетность**: Экспорт смет в PDF, создание списков покупок и актов выполненных работ.
- **Локальное хранение данных**: Все данные сохраняются в `localStorage` браузера.
- **AI-ассистент**: Использует Gemini API для предложения позиций сметы на основе описания на естественном языке.
- **Резервное копирование и восстановление**: Возможность сохранять и загружать все данные приложения из файла.
- **Учет инвентаря**: Учет инструментов и оборудования с указанием местоположения.

## Список изменений

### 28.08.2025 (Текущая сессия)

- **Исправление ошибки синтаксиса при деплое на Vercel**:
    - Исправлена критическая ошибка "Unexpected "}" в файле `src/App.tsx` на строке 2392.
    - Удален дублирующийся код функции `renderView` и связанных компонентов.
    - Исправлена ошибка "Unexpected end of file" в `src/components/modals/NewProjectModal.tsx`.
    - Сборка проекта теперь проходит успешно без ошибок.
    - Изменения закоммичены и отправлены в репозиторий GitHub.

- **Исправление белого экрана после деплоя**:
    - Исправлена ошибка "i is not defined" в функции `calculation` в `src/App.tsx`.
    - Заменены CDN скрипты jsPDF на npm пакеты для избежания проблем с MIME типами.
    - Удалены внешние скрипты jsPDF из `index.html`.
    - Обновлены импорты и использование jsPDF в коде.
    - Приложение теперь должно корректно загружаться без белого экрана.

- **Исправление проблемы с перекрытием полей ввода мобильной клавиатурой**:
    - Улучшена функция `handleInputFocus` для более точного позиционирования полей ввода.
    - Добавлен `scrollIntoView` с центрированием для лучшего UX.
    - Уменьшена задержка с 700ms до 300ms для более быстрой реакции.
    - Добавлены CSS стили для предотвращения зума на iOS (font-size: 16px).
    - Добавлены медиа-запросы для мобильных устройств с оптимизацией для клавиатуры.
    - Исправлены ошибки линтера с `showAlert` и `autoTable`.

- **Исправление ошибки генерации PDF**:
    - Исправлена ошибка "can't access property 'widths', o.metadata.Unicode is undefined".
    - Заменен шрифт Roboto на встроенный Helvetica для лучшей совместимости.
    - Удален импорт ROBOTO_FONT_BASE64, так как больше не используется.
    - Обновлены все ссылки на шрифт в коде генерации PDF.
    - PDF теперь должен генерироваться без ошибок.

- **Исправление проблем с отображением задач**:
    - Исправлен заголовок "Мои задачи" - теперь отображается в одну строку.
    - Добавлены стили для предотвращения выхода задач за границы контейнера.
    - Улучшена адаптивность элементов задач для мобильных устройств.
    - Добавлены стили для корректного переноса длинного текста задач.
    - Оптимизированы размеры кнопок действий для лучшего UX.

- **Возврат простого блокнота**:
    - Убран функционал чек-листа из блокнота.
    - Заменен на простое текстовое поле для быстрых заметок.
    - Упрощен интерфейс блокнота - теперь это обычное textarea.
    - Сохранена возможность развернуть блокнот в полноэкранный режим.
    - Обновлены CSS стили для нового вида блокнота.

- **Исправление синтаксических ошибок**:
    - Исправлена ошибка "Unexpected }" в WorkspaceView.tsx.
    - Удалены неиспользуемые переменные и функции (sortOrder, openPostponeMenu).
    - Упрощен код задач - убраны сложные функции сортировки и отложенных меню.
    - Удалены ссылки на несуществующие компоненты и функции.
    - Код теперь компилируется без ошибок.

- **Исправление белого экрана**:
    - Исправлен импорт ScratchpadItem в App.tsx - удалена ссылка на несуществующий тип.
    - Добавлен импорт React в App.tsx для корректной работы useState и других хуков.
    - Приложение теперь должно корректно загружаться без белого экрана.

- **Исправление экрана инвентаря**:
    - Добавлен импорт ConsumableItem в App.tsx.
    - Добавлено состояние consumables для управления расходниками.
    - Исправлена проблема с пустым экраном при открытии инвентаря.
    - Теперь экран инвентаря должен корректно отображать инструменты и расходники.

- **Исправление белого экрана при развертывании на Vercel**:
    - Исправлена ошибка `ReferenceError: onOpenScratchpadModal is not defined` в `WorkspaceView.tsx` путем коррекции передачи свойств из `App.tsx`.
    - Исправлена синтаксическая ошибка `Unexpected "}"` в `WorkspaceView.tsx` из-за дублирования кода.
    - Исправлена проблема перенаправления при нажатии кнопки развертывания блокнота на смету вместо открытия блокнота, путем добавления отсутствующего `case 'scratchpad'` в функцию `renderView` в `App.tsx`.
    - Исправлена неработающая кнопка "назад" в представлении блокнота путем корректной передачи `onBack` prop в `ScratchpadView` и корректировки имен свойств.

- **Исправление поля "Описание" в модальном окне "Добавить транзакцию"**:
    - Выявлено, что `textarea` в `FinanceEntryModal.tsx` не имела правильной высоты.
    - Стандартизирована высота всех полей `input` и `textarea` путем корректировки `padding` и `min-height`/`height` в `src/index.css`.

- **Исправление открытия камеры вместо галереи/хранилища**:
    - Удален атрибут `capture="environment"` из поля ввода файла в `PhotoReportModal.tsx`.

- **Изменение типа элемента по умолчанию в сметах**:
    - Изменен тип по умолчанию для новых элементов сметы с "material" на "work" в `handleAddItem`, `handleAddFromLibrary`, `handleAddItemsFromAI` и `populateForm` в `App.tsx`.

- **Изменение кнопок в представлении сметы**:
    - Удалена кнопка "Список покупок" из `EstimateView.tsx`.
    - Добавлена кнопка "Новая смета" в `EstimateView.tsx`.
    - Кнопка "Новая смета" связана с функцией `handleNewEstimate` в `App.tsx`.

- **Увеличение размера логотипа**:
    - Увеличен размер логотипа в `src/index.css`.

- **Улучшение центрирования поля ввода при фокусировке**:
    - Увеличена задержка `setTimeout` для `onInputFocus` в `App.tsx`.

- **Внедрение ESLint и Prettier**:
    - Установлены `eslint`, `prettier` и связанные плагины.
    - Созданы файлы конфигурации `.eslintrc.js` и `.prettierrc.js`.
    - Добавлены скрипты `lint` и `format` в `package.json`.

- **Улучшение обратной связи при валидации форм (частичная реализация)**:
    - Реализована встроенная валидация для поля `amount` в `FinanceEntryModal.tsx`.
    - Добавлены соответствующие CSS для сообщений об ошибках и стилизации полей ввода.

- **Оптимизация пустых состояний (реализовано для основных представлений)**:
    - Улучшены пустые состояния в `WorkspaceView.tsx` (Мои задачи, Мои документы).
    - Улучшены пустые состояния в `ProjectsListView.tsx`.
    - Улучшены пустые состояния в `ProjectDetailView.tsx` (Сметы, Финансы, График работ, Фотоотчеты, Документы, Заметки).
    - Улучшены пустые состояния в `InventoryView.tsx` (Инвентарные позиции, Инвентарные заметки).
    - Улучшены пустые состояния в `ReportsView.tsx`.

- **Улучшение доступности (A11y) - Модальные окна (частичная реализация)**:
    - Добавлены `role="dialog"` и `aria-modal="true"` ко всем компонентам модальных окон.
    - Реализовано базовое управление фокусом (сохранение/восстановление фокуса, закрытие по Escape, начальный фокус при открытии модального окна).

### 29.08.2025 (вечер)

- **Глобальный рефакторинг интерфейса (UI/UX)**:
    - Шапка приложения сделана глобальной и закрепленной. В нее перенесены основные действия: смена темы, доступ к справочнику, списку смет и настройкам.
    - Нижняя панель навигации была очищена от дублирующихся иконок ("Справочник", "Профиль").
    - Добавлен логотип и новое название приложения "Прораб" в шапку.
- **Редизайн главного экрана "Рабочий стол"**:
    - Удалены кнопки быстрых действий.
    - Добавлена новая функция "Мои документы" для хранения файлов, не привязанных к проектам.
    - Обновлен дизайн карточек "Мои задачи" и "Блокнот".
- **Сокрытие функции AI-помощника**:
    - Кнопки вызова AI-помощника временно убраны из интерфейса до будущих обновлений.
- **Исправление множественных ошибок в UI**:
    - Устранены проблемы с наложением кнопок в модальном окне "Мои документы".
    - Исправлена ошибка, при которой клавиатура перекрывала поле "Описание" в окне добавления транзакции.
    - Локализованы кнопки "Edit" и "Del" на русский язык в модальном окне "Справочник".
    - Скорректирован отступ нижней навигационной панели для корректного отображения на iPhone (учет safe-area).
- **Исправление ошибки генерации PDF**:
    - Обновлена версия библиотеки `jspdf-autotable`, что решило проблему со шрифтами и позволило снова генерировать PDF-документы.
- **Улучшение поля "Блокнота" на экране "Рабочий стол"**:
    - Реализована возможность создавать чек-листы (списки с галочками) вместо простого текста.
    - Обновлены типы данных для блокнота (`ScratchpadItem`).
    - Изменена логика загрузки/сохранения блокнота для поддержки нового формата, включая миграцию старых текстовых заметок в формат чек-листа.
    - Добавлены функции для добавления, переключения состояния и удаления элементов чек-листа.
    - Обновлен UI блокнота в `WorkspaceView.tsx` для отображения чек-листа.
    - Добавлены соответствующие CSS-стили.
- **Расширение функционала "Мои задачи" (Часть 1: Базовые улучшения)**:
    - Добавлены поля `dueDate` (срок выполнения), `projectId` (привязка к проекту), `executor` (исполнитель) и `priority` (приоритет) к интерфейсу `Task`.
    - Обновлена логика добавления задачи для автоматической установки срока выполнения на "Сегодня" по умолчанию.
    - Реализована фильтрация задач по категориям: "Все", "На сегодня", "На неделю", "Просроченные", "Выполненные".
    - Обновлен UI списка задач в `WorkspaceView.tsx` для отображения срока выполнения и названия проекта.
    - Добавлены соответствующие CSS-стили для фильтров и отображения задач.
- **Расширение функционала "Мои задачи" (Часть 2: Детальное редактирование)**:
    - Добавлены поля `description` (описание), `comments` (комментарии), `subtasks` (чек-лист подзадач), `attachments` (прикрепленные файлы), `tags` (метки/теги) к интерфейсу `Task`.
    - Создано новое модальное окно `TaskDetailModal.tsx` для детального просмотра и редактирования задач.
    - В `TaskDetailModal` реализованы поля для редактирования названия, описания, проекта, исполнителя, срока выполнения, приоритета.
    - В `TaskDetailModal` реализован чек-лист подзадач с возможностью добавления, переключения состояния и удаления подзадач.
    - Добавлены заглушки для функционала прикрепленных файлов, меток/тегов и комментариев.
    - Интегрировано открытие `TaskDetailModal` при клике на задачу в списке на "Рабочем столе".
    - Добавлены соответствующие CSS-стили для `TaskDetailModal` и его элементов.

### 29.08.2025

- **Добавлен "Рабочий стол"**: 
    - Реализован новый стартовый экран, который служит центральным хабом для пользователя.
    - Добавлены виджеты: "Мои задачи" (to-do лист), "Блокнот" для быстрых заметок, "Последние документы" и "Быстрый доступ" к основным функциям.
    - Вся информация с рабочего стола сохраняется локально.
    - В навигацию добавлена кнопка "Главная" для возврата на этот экран.
- **Исправлена работа AI-помощника**:
    - Настроено корректное использование API-ключа через файл `.env.local`.
    - Обновлена модель на `gemini-2.0-flash` для повышения качества ответов.
- **Управление репозиторием**:
    - Создан файл `GEMINI.md` с подробным описанием проекта для облегчения будущих доработок.
    - Все новые функции и исправления были успешно отправлены в удаленный репозиторий GitHub.

### 28.08.2025

- **Первоначальная настройка**: Установлены зависимости npm и запущен сервер разработки.
- **Исправление ошибок**:
    - Устранена критическая ошибка с отсутствующим импортом `GoogleGenerativeAI`.
    - Удален жестко закодированный API-ключ и настроено использование переменных окружения.
    - Исправлен некорректный вызов Gemini API.
- **Рефакторинг кода**:
    - Большой файл `index.tsx` был разделен на множество мелких компонентов, что значительно улучшило структуру проекта и его поддерживаемость.
    - Созданы отдельные файлы для типов (`types.ts`), утилит (`utils.ts`) и констант (`constants.ts`).
- **Улучшения интерфейса (UI/UX)**:
    - Добавлены индикаторы загрузки для процессов сохранения и экспорта в PDF.
    - Улучшена визуальная обратная связь при перетаскивании элементов сметы.
- **Новые функции**:
    - Реализована функция резервного копирования и восстановления данных через настройки профиля.
    - **Добавлен раздел "Инвентарь"**:
        - Реализована возможность учета инструментов и оборудования.
        - Добавлено добавление, удаление и обновление инструментов.
        - Для каждого инструмента можно указать местоположение: "На базе" или на одном из активных проектов.
        - Добавлен раздел для ведения заметок по инвентарю.